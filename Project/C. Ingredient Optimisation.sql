--- 1. What are the standard ingredients for each pizza? 
SELECT PN.PIZZA_NAME,
       GROUP_CONCAT(PT.TOPPING_NAME SEPARATOR ', ') AS STANDARD_INGREDIENTS
FROM PIZZA_RECIPES AS PR
JOIN PIZZA_TOPPINGS PT ON FIND_IN_SET(PT.TOPPING_ID, REPLACE(PR.TOPPINGS, ' ', '')) > 0
JOIN PIZZA_NAMES AS PN USING (PIZZA_ID)
GROUP BY PN.PIZZA_NAME;

--- 2. What was the most commonly added extra?

--- 3. What was the most common exclusion? 
SELECT exclusions AS most_common_exclusion
FROM customer_orders
WHERE exclusions IS NOT NULL
    AND exclusions != ''
GROUP BY exclusions
ORDER BY COUNT(exclusions) DESC
LIMIT 1;
--- 4. Generate an order item for each record in the customers_orders table.
WITH CTE1 AS (
    SELECT CO.ORDER_ID,
           PN.PIZZA_NAME,
           CONCAT('EXCLUDE ', GROUP_CONCAT(DISTINCT PT_EXC.TOPPING_NAME ORDER BY PT_EXC.TOPPING_NAME)) AS EXCLUSIONS,
           CONCAT('EXTRA ', GROUP_CONCAT(DISTINCT PT_EXTRAS.TOPPING_NAME ORDER BY PT_EXTRAS.TOPPING_NAME)) AS EXTRAS
    FROM CUSTOMER_ORDERS CO
    LEFT JOIN PIZZA_NAMES PN ON CO.PIZZA_ID = PN.PIZZA_ID
    LEFT JOIN PIZZA_TOPPINGS PT_EXC ON FIND_IN_SET(PT_EXC.TOPPING_ID, REPLACE(CO.EXCLUSIONS, ' ', '')) > 0
    LEFT JOIN PIZZA_TOPPINGS PT_EXTRAS ON FIND_IN_SET(PT_EXTRAS.TOPPING_ID, REPLACE(CO.EXTRAS, ' ', '')) > 0
    GROUP BY CO.ORDER_ID, PN.PIZZA_NAME, CO.EXCLUSIONS, CO.EXTRAS
)
SELECT ORDER_ID, CONCAT_WS(' - ', PIZZA_NAME, EXCLUSIONS, EXTRAS) AS ORDER_DETAILS
FROM CTE1;

--- 5. Generate an alphabetically ordered comma separated ingredient list for each pizza order from the customer_orders table and add a 2x in front of any relevant ingredients.
SELECT 
    PN.PIZZA_NAME,
    CO.ORDER_ID,
    GROUP_CONCAT(
        CASE 
            WHEN PR.TOPPINGS LIKE CONCAT('%', PT.TOPPING_ID, '%') 
            THEN CONCAT('2X', PT.TOPPING_NAME) 
            ELSE PT.TOPPING_NAME 
        END
        ORDER BY PT.TOPPING_NAME ASC
        SEPARATOR ', '
    ) AS INGREDIENT_LIST
FROM CUSTOMER_ORDERS CO
JOIN PIZZA_RECIPES PR ON CO.PIZZA_ID = PR.PIZZA_ID
JOIN PIZZA_NAMES PN ON CO.PIZZA_ID = PN.PIZZA_ID
JOIN PIZZA_TOPPINGS PT ON FIND_IN_SET(PT.TOPPING_ID, REPLACE(PR.TOPPINGS, ' ', '')) > 0
GROUP BY CO.ORDER_ID, PN.PIZZA_NAME
ORDER BY CO.ORDER_ID;
--- 6. What is the total quantity of each ingredient used in all delivered pizzas sorted by most frequent first?
SELECT 
    PT.TOPPING_NAME,
    COUNT(CO.ORDER_ID) TOPPING_COUNT
FROM PIZZA_TOPPINGS PT
LEFT JOIN PIZZA_RECIPES PR 
    ON FIND_IN_SET(CAST(PT.TOPPING_ID AS CHAR), REPLACE(PR.TOPPINGS, ' ', '')) > 0
LEFT JOIN CUSTOMER_ORDERS CO 
    ON CO.PIZZA_ID = PR.PIZZA_ID
LEFT JOIN RUNNER_ORDERS RO 
    ON CO.ORDER_ID = RO.ORDER_ID 
    AND RO.CANCELLATION = ''
GROUP BY PT.TOPPING_NAME
ORDER BY TOPPING_COUNT DESC;
